apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-express-deployment
  labels: { app: mongo-express }
spec:
  replicas: 1
  selector:
    matchLabels: { app: mongo-express }
  template:
    metadata:
      labels: { app: mongo-express }
    spec:
      volumes:
      - name: config-volume
        configMap:
          name: mongo-express-config
      containers:
      - name: mongo-express
        image: mongo-express:latest
        ports:
        - containerPort: 8081
        env:
        - name: ME_CONFIG_MONGODB_SERVER
          valueFrom:
            configMapKeyRef:
              name: mongodb-configmap
              key: database_url
        - name: ME_CONFIG_MONGODB_PORT
          value: "27017"
        - name: ME_CONFIG_MONGODB_ADMINUSERNAME
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: mongo-root-username
        - name: ME_CONFIG_MONGODB_ADMINPASSWORD
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: mongo-root-password
        - name: ME_CONFIG_BASICAUTH_USER
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: mongo-root-username
        - name: ME_CONFIG_BASICAUTH_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: mongo-root-password
        volumeMounts:
        - mountPath: /config.js
          subPath: config.js
          name: config-volume
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-express-service
spec:
  type: LoadBalancer  # or NodePort if LoadBalancer isn't supported
  selector: { app: mongo-express }
  ports:
    - protocol: TCP
      port: 8081
      targetPort: 8081
      nodePort: 30000